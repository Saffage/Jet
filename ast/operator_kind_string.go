// Code generated by "stringer -type=OperatorKind -linecomment -output=operator_kind_string.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnknownOperator-0]
	_ = x[OperatorNot-1]
	_ = x[OperatorNeg-2]
	_ = x[OperatorAddrOf-3]
	_ = x[OperatorMutAddrOf-4]
	_ = x[OperatorPtr-5]
	_ = x[OperatorMutPtr-6]
	_ = x[OperatorEllipsis-7]
	_ = x[OperatorAssign-8]
	_ = x[OperatorAddAssign-9]
	_ = x[OperatorSubAssign-10]
	_ = x[OperatorMultAssign-11]
	_ = x[OperatorDivAssign-12]
	_ = x[OperatorModAssign-13]
	_ = x[OperatorBitAndAssign-14]
	_ = x[OperatorBitOrAssign-15]
	_ = x[OperatorBitXorAssign-16]
	_ = x[OperatorBitShlAssign-17]
	_ = x[OperatorBitShrAssign-18]
	_ = x[OperatorAdd-19]
	_ = x[OperatorSub-20]
	_ = x[OperatorMul-21]
	_ = x[OperatorDiv-22]
	_ = x[OperatorMod-23]
	_ = x[OperatorEq-24]
	_ = x[OperatorNe-25]
	_ = x[OperatorLt-26]
	_ = x[OperatorLe-27]
	_ = x[OperatorGt-28]
	_ = x[OperatorGe-29]
	_ = x[OperatorBitAnd-30]
	_ = x[OperatorBitOr-31]
	_ = x[OperatorBitXor-32]
	_ = x[OperatorBitShl-33]
	_ = x[OperatorBitShr-34]
	_ = x[OperatorAnd-35]
	_ = x[OperatorOr-36]
	_ = x[OperatorAs-37]
	_ = x[OperatorRangeInclusive-38]
	_ = x[OperatorRangeExclusive-39]
}

const _OperatorKind_name = "UnknownOperator!-&&mut**mut...=+=-=*=/=%=&=|=^=<<=>>=+-*/%==!=<<=>>=&|^<<>>andoras....<"

var _OperatorKind_index = [...]uint8{0, 15, 16, 17, 18, 22, 23, 27, 30, 31, 33, 35, 37, 39, 41, 43, 45, 47, 50, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 69, 70, 71, 73, 75, 78, 80, 82, 84, 87}

func (i OperatorKind) String() string {
	if i >= OperatorKind(len(_OperatorKind_index)-1) {
		return "OperatorKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperatorKind_name[_OperatorKind_index[i]:_OperatorKind_index[i+1]]
}
