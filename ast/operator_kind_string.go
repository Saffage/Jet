// Code generated by "stringer -type=OperatorKind -linecomment -output=operator_kind_string.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnknownOperator-0]
	_ = x[OperatorNot-1]
	_ = x[OperatorNeg-2]
	_ = x[OperatorAddr-3]
	_ = x[OperatorDeref-4]
	_ = x[OperatorAssign-5]
	_ = x[OperatorAdd-6]
	_ = x[OperatorSub-7]
	_ = x[OperatorMul-8]
	_ = x[OperatorDiv-9]
	_ = x[OperatorMod-10]
	_ = x[OperatorEq-11]
	_ = x[OperatorNe-12]
	_ = x[OperatorLt-13]
	_ = x[OperatorLe-14]
	_ = x[OperatorGt-15]
	_ = x[OperatorGe-16]
	_ = x[OperatorBitAnd-17]
	_ = x[OperatorBitOr-18]
	_ = x[OperatorBitXor-19]
	_ = x[OperatorBitShl-20]
	_ = x[OperatorBitShr-21]
	_ = x[OperatorAnd-22]
	_ = x[OperatorOr-23]
}

const _OperatorKind_name = "UnknownOperator!-**=+-*/%==!=<<=>>=&|^<<>>andor"

var _OperatorKind_index = [...]uint8{0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 45, 47}

func (i OperatorKind) String() string {
	if i >= OperatorKind(len(_OperatorKind_index)-1) {
		return "OperatorKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperatorKind_name[_OperatorKind_index[i]:_OperatorKind_index[i+1]]
}
