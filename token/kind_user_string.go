// Code generated by "stringer -type=Kind -output=kind_user_string.go -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Comment-2]
	_ = x[Whitespace-3]
	_ = x[NewLine-4]
	_ = x[Ident-5]
	_ = x[Int-6]
	_ = x[Float-7]
	_ = x[String-8]
	_ = x[LParen-9]
	_ = x[RParen-10]
	_ = x[LCurly-11]
	_ = x[RCurly-12]
	_ = x[LBracket-13]
	_ = x[RBracket-14]
	_ = x[Comma-15]
	_ = x[Colon-16]
	_ = x[Semicolon-17]
	_ = x[Eq-18]
	_ = x[EqOp-19]
	_ = x[Bang-20]
	_ = x[NeOp-21]
	_ = x[LtOp-22]
	_ = x[LeOp-23]
	_ = x[GtOp-24]
	_ = x[GeOp-25]
	_ = x[Plus-26]
	_ = x[PlusEq-27]
	_ = x[Minus-28]
	_ = x[MinusEq-29]
	_ = x[Asterisk-30]
	_ = x[AsteriskEq-31]
	_ = x[Slash-32]
	_ = x[SlashEq-33]
	_ = x[Percent-34]
	_ = x[PercentEq-35]
	_ = x[Amp-36]
	_ = x[Pipe-37]
	_ = x[Caret-38]
	_ = x[At-39]
	_ = x[QuestionMark-40]
	_ = x[Arrow-41]
	_ = x[FatArrow-42]
	_ = x[Shl-43]
	_ = x[Shr-44]
	_ = x[Dot-45]
	_ = x[Dot2-46]
	_ = x[Dot2Less-47]
	_ = x[Ellipsis-48]
	_ = x[KwModule-49]
	_ = x[KwAlias-50]
	_ = x[KwStruct-51]
	_ = x[KwEnum-52]
	_ = x[KwFunc-53]
	_ = x[KwVal-54]
	_ = x[KwVar-55]
	_ = x[KwConst-56]
	_ = x[KwOf-57]
	_ = x[KwIf-58]
	_ = x[KwElse-59]
	_ = x[KwWhile-60]
	_ = x[KwReturn-61]
	_ = x[KwBreak-62]
	_ = x[KwContinue-63]
	_ = x[KwAnd-64]
	_ = x[KwOr-65]
}

const _Kind_user_name = "illegal characterend of filecommentwhitespacenew lineidentifieruntyped intuntyped floatuntyped string'('')''{''}''['']'','':'';'operator '='operator '=='operator '!'operator '!='operator '<'operator '<='operator '>'operator '>='operator '+'operator '+='operator '-'operator '-='operator '*'operator '*='operator '/'operator '/='operator '%'operator '%='operator '&'operator '|'operator '^'operator '@'operator '?'operator '->'operator '=>'operator '<<'operator '>>'operator '.'operator '..'operator '..<'operator '...'keyword 'module'keyword 'alias'keyword 'struct'keyword 'enum'keyword 'func'keyword 'val'keyword 'var'keyword 'const'keyword 'of'keyword 'if'keyword 'else'keyword 'while'keyword 'return'keyword 'break'keyword 'continue'keyword 'and'keyword 'or'"

var _Kind_user_index = [...]uint16{0, 17, 28, 35, 45, 53, 63, 74, 87, 101, 104, 107, 110, 113, 116, 119, 122, 125, 128, 140, 153, 165, 178, 190, 203, 215, 228, 240, 253, 265, 278, 290, 303, 315, 328, 340, 353, 365, 377, 389, 401, 413, 426, 439, 452, 465, 477, 490, 504, 518, 534, 549, 565, 579, 593, 606, 619, 634, 646, 658, 672, 687, 703, 718, 736, 749, 761}

func (i Kind) UserString() string {
	if i >= Kind(len(_Kind_user_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_user_name[_Kind_user_index[i]:_Kind_user_index[i+1]]
}
