// Code generated by "stringer -type=Kind -output=kind_user_string.go -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[Comment-2]
	_ = x[Whitespace-3]
	_ = x[Tab-4]
	_ = x[NewLine-5]
	_ = x[Ident-6]
	_ = x[Int-7]
	_ = x[Float-8]
	_ = x[String-9]
	_ = x[LParen-10]
	_ = x[RParen-11]
	_ = x[LCurly-12]
	_ = x[RCurly-13]
	_ = x[LBracket-14]
	_ = x[RBracket-15]
	_ = x[Comma-16]
	_ = x[Colon-17]
	_ = x[Semicolon-18]
	_ = x[Eq-19]
	_ = x[EqOp-20]
	_ = x[Bang-21]
	_ = x[NeOp-22]
	_ = x[LtOp-23]
	_ = x[LeOp-24]
	_ = x[GtOp-25]
	_ = x[GeOp-26]
	_ = x[Shl-27]
	_ = x[ShlEq-28]
	_ = x[Shr-29]
	_ = x[ShrEq-30]
	_ = x[Plus-31]
	_ = x[PlusEq-32]
	_ = x[Minus-33]
	_ = x[MinusEq-34]
	_ = x[Asterisk-35]
	_ = x[AsteriskEq-36]
	_ = x[Slash-37]
	_ = x[SlashEq-38]
	_ = x[Percent-39]
	_ = x[PercentEq-40]
	_ = x[Amp-41]
	_ = x[AmpEq-42]
	_ = x[Pipe-43]
	_ = x[PipeEq-44]
	_ = x[Caret-45]
	_ = x[CaretEq-46]
	_ = x[At-47]
	_ = x[Dollar-48]
	_ = x[QuestionMark-49]
	_ = x[Arrow-50]
	_ = x[FatArrow-51]
	_ = x[Dot-52]
	_ = x[Dot2-53]
	_ = x[Dot2Less-54]
	_ = x[Ellipsis-55]
	_ = x[KwAnd-56]
	_ = x[KwOr-57]
	_ = x[KwStruct-58]
	_ = x[KwEnum-59]
	_ = x[KwMut-60]
	_ = x[KwIf-61]
	_ = x[KwElse-62]
	_ = x[KwWhile-63]
	_ = x[KwFor-64]
	_ = x[KwIn-65]
	_ = x[KwAs-66]
	_ = x[KwDefer-67]
	_ = x[KwReturn-68]
	_ = x[KwBreak-69]
	_ = x[KwContinue-70]
}

const _Kind_user_name = "illegal characterend of filecommentwhitespacehorizontal tabulationnew lineidentifieruntyped intuntyped floatuntyped string'('')''{''}''['']'','':'';'operator '='operator '=='operator '!'operator '!='operator '<'operator '<='operator '>'operator '>='operator '<<'operator '<<='operator '>>'operator '>>='operator '+'operator '+='operator '-'operator '-='operator '*'operator '*='operator '/'operator '/='operator '%'operator '%='operator '&'operator '&='operator '|'operator '|='operator '^'operator '^='operator '@'operator '$'operator '?'operator '->'operator '=>'operator '.'operator '..'operator '..<'operator '...'keyword 'and'keyword 'or'keyword 'struct'keyword 'enum'keyword 'mut'keyword 'if'keyword 'else'keyword 'while'keyword 'for'keyword 'in'keyword 'as'keyword 'defer'keyword 'return'keyword 'break'keyword 'continue'"

var _Kind_user_index = [...]uint16{0, 17, 28, 35, 45, 66, 74, 84, 95, 108, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 161, 174, 186, 199, 211, 224, 236, 249, 262, 276, 289, 303, 315, 328, 340, 353, 365, 378, 390, 403, 415, 428, 440, 453, 465, 478, 490, 503, 515, 527, 539, 552, 565, 577, 590, 604, 618, 631, 643, 659, 673, 686, 698, 712, 727, 740, 752, 764, 779, 795, 810, 828}

func (i Kind) UserString() string {
	if i >= Kind(len(_Kind_user_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_user_name[_Kind_user_index[i]:_Kind_user_index[i+1]]
}
